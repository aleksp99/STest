#Область ОбработчикиСобытийФормы

&НаСервере
Процедура PA_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Администратор_Логин", ОбщегоНазначения.ОписаниеТипаСтрока(150)));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Администратор_Пароль", ОбщегоНазначения.ОписаниеТипаСтрока(50)));
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	Группа = Элементы.Вставить("ПодменюЗаполнить", Тип("ГруппаФормы"), Элементы.ФормаКоманднаяПанель, Элементы.ГруппаКнопокПеремещение);
	Группа.Вид = ВидГруппыФормы.Подменю;
	Группа.Заголовок = НСтр("ru = 'Заполнить'", "ru");
	
	Команды.Добавить("ЗаполнитьКИ").Действие = "ЗаполнитьКИ";
	Элемент = Элементы.Добавить("ЗаполнитьКИ", Тип("КнопкаФормы"), Группа);
	Элемент.ИмяКоманды = "ЗаполнитьКИ";
	Элемент.Заголовок = НСтр("ru = 'Командный интерфейс'", "ru");
	
	Команды.Добавить("Заполнить_ПрямыеСсылки").Действие = "Заполнить_ПрямыеСсылки";
	Элемент = Элементы.Добавить("Заполнить_ПрямыеСсылки", Тип("КнопкаФормы"), Группа);
	Элемент.ИмяКоманды = "Заполнить_ПрямыеСсылки";
	Элемент.Заголовок = НСтр("ru = 'Заполнить прямые ссылки'", "ru");
	
	Элементы.БлокСценария.ПоложениеСтрокиПоиска = ПоложениеСтрокиПоиска.Верх;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы // <ИмяТаблицыФормы>

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьКИ(Команда)
	
	Если НЕ СцТ_ТестируемоеПриложениеАктивно() Тогда
		ПредупреждениеАсинх(НСтр("ru = 'Тестируемый клиент не запущен. Выбор кнопок командного интерфейса недоступен.'"));
		Возврат;
	КонецЕсли;
	
	ГлавноеОкно = СцТ_ПолучитьОсновноеОкноТестируемогоПриложения();
	
	Если ГлавноеОкно = Неопределено Тогда
		ПредупреждениеАсинх(НСтр("ru = 'Не удалось обратиться к главному окну тестируемого приложения, возможно тесируемое приложение не запущено.'"));
		Возврат;
	КонецЕсли;
	
	Строки = БлокСценария.ПолучитьЭлементы();
	Строки.Очистить();
	КомандныйИнтерфейс = ГлавноеОкно.ПолучитьКомандныйИнтерфейс();
	Для Каждого ПанельРазделов Из КомандныйИнтерфейс.ПолучитьОбъект().ПолучитьПодчиненныеОбъекты() Цикл 
		
		// папка панели
		Строки1 = Заполнить_ДобавитьГруппу(Строки, ПанельРазделов.ТекстЗаголовка, "Панель разделов/" + ПанельРазделов.ТекстЗаголовка).ПолучитьЭлементы();
		
		// активация панели
		ПанельРазделов.Нажать();
		
		// добавим все кнопки панели
		Заполнить_ДобавитьКнопкиКС(КомандныйИнтерфейс.ПолучитьПодчиненныеОбъекты()[2], Строки1);
		
		Код = "Для Каждого Элемент Из ПеремТестируемоеПриложение.ПолучитьПодчиненныеОбъекты() Цикл 
		|	Если Элемент.НачальнаяСтраница Тогда 
		|		Элемент.Активизировать();
		|	ИначеЕсли Не (Элемент.НачальнаяСтраница Или Элемент.Основное) Тогда 
		|		Элемент.Закрыть();
		|	КонецЕсли;
		|КонецЦикла;";
		НоваяСтрока = Строки1.Добавить();
		НоваяСтрока.Автоописание = СтрШаблон("Выполнить процедуру на клиенте:
		|{ %1 } ", Код);
		НоваяСтрока.Активность = 1;
		НоваяСтрока.ДанныеКартинки = СцТ_ПолучитьНомерКартинки("ВыполнитьКлиентскуюПроцедуру");
		НоваяСтрока.Наименование = НСтр("ru = 'Закроем все окна и деактивация панели'", "ru");
		НоваяСтрока.ТипШага = "ВыполнитьКлиентскуюПроцедуру";
		НоваяСтрока.УИШ = Новый УникальныйИдентификатор;
		НоваяСтрока.Цвет = "0";
		НоваяСтрока.Значение = ПоместитьВХранилище(Новый Структура("ДействиеПриОшибке,НаСервере,НаименованиеИзмененоВручную,ТекстПроцедуры,ИмяПеременнойРезультата", "Остановить", Ложь, Истина, Код, ""));
		
	КонецЦикла;
	
	СцТ_ПронумероватьШаги_НаКлиенте();
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить_ПрямыеСсылки(Команда)
	
	Если ПустаяСтрока(Объект.ИмяПользователя) Тогда 
		ПредупреждениеАсинх(НСтр("ru = 'Укажите пользователя!'", "ru"));
		Возврат;
	КонецЕсли;
	
	Ответ = ЕстьCOMConnector();
	Если Ответ.ОшибкаПодключенияКомпоненты Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Ответ.ПодробноеОписаниеОшибки);
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(ЭтаФорма["Администратор_Логин"]) Тогда 
		ПараметрыАутентификации = Новый Структура("Логин,Пароль", ЭтаФорма["Администратор_Логин"], ЭтаФорма["Администратор_Пароль"]);
		Оповещение = Новый ОписаниеОповещения("ЗаверитьАутентификацию", ЭтаФорма);
		ОткрытьФорму("Обработка.СценарноеТестированиеИнтерактивныхДействий.Форма.Аутентификация", ПараметрыАутентификации, ЭтаФорма,,,, Оповещение);
		Возврат;
	КонецЕсли;
	
	НомераКартинок = Новый Структура;
	НомераКартинок.Вставить("Группа", СцТ_ПолучитьНомерКартинки("Группа"));
	НомераКартинок.Вставить("НавигационнаяСсылка", СцТ_ПолучитьНомерКартинки("ВыполнитьИнтерактивнуюКоманду"));
	НомераКартинок.Вставить("Выполнить", СцТ_ПолучитьНомерКартинки("ВыполнитьКлиентскуюПроцедуру"));
	
	Заполнить_ПрямыеСсылкиНаСервере(НомераКартинок);
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция Заполнить_ДобавитьГруппу(Строки, Наименование, Автоописание)
	
	НоваяСтрока = Строки.Добавить();
	НоваяСтрока.Автоописание = Автоописание;
	НоваяСтрока.Наименование = Наименование;
	НоваяСтрока.Активность = 1;
	НоваяСтрока.ДанныеКартинки = СцТ_ПолучитьНомерКартинки("Группа");
	НоваяСтрока.ТипШага = "Группа";
	НоваяСтрока.УИШ = Новый УникальныйИдентификатор;
	НоваяСтрока.Цвет = "0";
	НоваяСтрока.Значение = ПоместитьВХранилище(Новый Структура("ДействиеПриОшибке,НаименованиеИзмененоВручную,ИмяПеременнойРезультата,Описание", "Остановить", Ложь, "", ""));
	
	Возврат НоваяСтрока;
	
КонецФункции

&НаКлиенте
Процедура Заполнить_ДобавитьКнопкиКС(ВладелецОбъектов, Строки)
	
	Для Каждого Элемент Из ВладелецОбъектов.ПолучитьПодчиненныеОбъекты() Цикл 
		
		Если ТипЗнч(Элемент) = Тип("ТестируемаяКнопкаКомандногоИнтерфейса") Тогда 
			Если ПустаяСтрока(Элемент.НавигационнаяСсылка) Тогда 
				Продолжить;
			КонецЕсли;
			НоваяСтрока = Строки.Добавить();
			НоваяСтрока.Автоописание = СтрШаблон("Перейти по навигационной ссылке ""%1 {%2}""", Элемент.ТекстЗаголовка, Элемент.НавигационнаяСсылка);
			НоваяСтрока.Наименование = Элемент.ТекстЗаголовка;
			НоваяСтрока.Активность = 1;
			НоваяСтрока.ДанныеКартинки = СцТ_ПолучитьНомерКартинки("ВыполнитьИнтерактивнуюКоманду");
			НоваяСтрока.ТипШага = "ВыполнитьИнтерактивнуюКоманду";
			НоваяСтрока.УИШ	= Новый УникальныйИдентификатор;
			НоваяСтрока.Цвет = "0";
			НоваяСтрока.Значение = ПоместитьВХранилище(Новый Структура("ДействиеПриОшибке,НавигационнаяСсылка,НаименованиеИзмененоВручную,ИмяПеременнойРезультата",	"Остановить", Элемент.НавигационнаяСсылка, Ложь, ""));
			
		ИначеЕсли ТипЗнч(Элемент) = Тип("ТестируемаяГруппаКомандногоИнтерфейса") Тогда 
			Группа = Заполнить_ДобавитьГруппу(Строки, Элемент.ТекстЗаголовка, "" + Элемент.ТекстЗаголовка);
			Заполнить_ДобавитьКнопкиКС(Элемент, Группа.ПолучитьЭлементы());
			
		Иначе 
			ВызватьИсключение НСтр("ru = 'Тип не поддерживается!'", "ru");
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаверитьАутентификацию(РезультатЗакрытия, ДополнительныеПараметры) Экспорт 
	
	Если РезультатЗакрытия = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ЭтаФорма["Администратор_Логин"] = РезультатЗакрытия.Логин;
	ЭтаФорма["Администратор_Пароль"] = РезультатЗакрытия.Пароль;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЕстьCOMConnector()
	
	// см. ОбщегоНазначенияКлиентСервер.УстановитьВнешнееСоединениеСБазой()
	
	Результат = Новый Структура;
	//Результат.Вставить("Соединение");
	Результат.Вставить("КраткоеОписаниеОшибки", "");
	Результат.Вставить("ПодробноеОписаниеОшибки", "");
	Результат.Вставить("ОшибкаПодключенияКомпоненты", Ложь);
	
	Попытка
		_ = Новый COMObject(ОбщегоНазначенияКлиентСервер.ИмяCOMСоединителя()); _ = Неопределено; // "V83.COMConnector"
	Исключение
		Информация = ИнформацияОбОшибке();
		СтрокаСообщенияОбОшибке = НСтр("ru = 'Не удалось подключится к другой программе: %1'");
		
		Результат.ОшибкаПодключенияКомпоненты = Истина;
		Результат.ПодробноеОписаниеОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СтрокаСообщенияОбОшибке, ПодробноеПредставлениеОшибки(Информация));
		Результат.КраткоеОписаниеОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СтрокаСообщенияОбОшибке, КраткоеПредставлениеОшибки(Информация));
		
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура Заполнить_ПрямыеСсылкиНаСервере(НомераКартинок)
	
	ПараметрыСоединения = ОбщегоНазначенияКлиентСервер.ПолучитьПараметрыПодключенияИзСтрокиСоединенияИнформационнойБазы(СтрокаПодключенияКИБ);
	ПараметрыСоединения.ИмяПользователя = ЭтаФорма["Администратор_Логин"];
	ПараметрыСоединения.ПарольПользователя = ЭтаФорма["Администратор_Пароль"];
	Ответ = ОбщегоНазначенияКлиентСервер.УстановитьВнешнееСоединениеСБазой(ПараметрыСоединения);
	Если Ответ.ОшибкаПодключенияКомпоненты Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Ответ.ПодробноеОписаниеОшибки);
		Возврат;
	КонецЕсли;
	Соединение = Ответ.Соединение;
	
	ПользовательИБ = Соединение.ПользователиИнформационнойБазы.НайтиПоИмени(Объект.ИмяПользователя);
	Если ПользовательИБ = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	ЭтоПолноправныйПользователь = Соединение.Пользователи.ЭтоПолноправныйПользователь(ПользовательИБ);
	
	Строки = БлокСценария.ПолучитьЭлементы();
	Строки.Очистить();
	ТекущийНомерШага = 0;
	Количество = 0;
	
	ЗначениеГруппы = ПоместитьВХранилище(Новый Структура("ДействиеПриОшибке,НаименованиеИзмененоВручную,ИмяПеременнойРезультата,Описание", "Остановить", Ложь, "", ""));
	ЗначениеСсылки = Новый Структура("ДействиеПриОшибке,НавигационнаяСсылка,НаименованиеИзмененоВручную,ИмяПеременнойРезультата",	"Остановить", "", Ложь, "");
	
	#Область Справочники
	Строки_Класс = Неопределено;
	Для Каждого ОбъектМД Из Соединение.Метаданные.Справочники Цикл 
		
		Если Не (ЭтоПолноправныйПользователь Или Соединение.ПравоДоступа("Просмотр", ОбъектМД, ПользовательИБ)) Тогда 
			Продолжить;
		КонецЕсли;
		
		Если Строки_Класс = Неопределено Тогда 
			ТекущийНомерШага = ТекущийНомерШага + 1;
			НоваяСтрока = Строки.Добавить();
			НоваяСтрока.Наименование = "Справочники";
			НоваяСтрока.Активность = 1;
			НоваяСтрока.ДанныеКартинки = НомераКартинок.Группа;
			НоваяСтрока.ТипШага = "Группа";
			НоваяСтрока.УИШ = Новый УникальныйИдентификатор;
			НоваяСтрока.Цвет = "0";
			НоваяСтрока.НомерШага = ТекущийНомерШага;
			НоваяСтрока.Значение = ЗначениеГруппы;
			Строки_Класс = НоваяСтрока.ПолучитьЭлементы();
		КонецЕсли;
		
		ТекущийНомерШага = ТекущийНомерШага + 1;
		НоваяСтрока = Строки_Класс.Добавить();
		НоваяСтрока.Автоописание = ОбъектМД.ПолноеИмя();
		НоваяСтрока.Наименование = ОбъектМД.Представление();
		НоваяСтрока.Активность = 1;
		НоваяСтрока.ДанныеКартинки = НомераКартинок.Группа;
		НоваяСтрока.ТипШага = "Группа";
		НоваяСтрока.УИШ = Новый УникальныйИдентификатор;
		НоваяСтрока.Цвет = "0";
		НоваяСтрока.НомерШага = ТекущийНомерШага;
		НоваяСтрока.Значение = ЗначениеГруппы;
		Строки_Класс_Объект = НоваяСтрока.ПолучитьЭлементы();
		
		ТекущийНомерШага = ТекущийНомерШага + 1;
		НоваяСтрока = Строки_Класс_Объект.Добавить();
		НоваяСтрока.Автоописание = ОбъектМД.ПолноеИмя() + ".ФормаСписка";
		НоваяСтрока.Наименование = ОбъектМД.Представление() + " (Форма списка)";
		НоваяСтрока.Активность = 1;
		НоваяСтрока.ДанныеКартинки = НомераКартинок.НавигационнаяСсылка;
		НоваяСтрока.ТипШага = "ВыполнитьИнтерактивнуюКоманду";
		НоваяСтрока.УИШ	= Новый УникальныйИдентификатор;
		НоваяСтрока.Цвет = "0";
		НоваяСтрока.НомерШага = ТекущийНомерШага;
		ЗначениеСсылки.НавигационнаяСсылка = "e1cib/list/" + ОбъектМД.ПолноеИмя();
		НоваяСтрока.Значение = ПоместитьВХранилище(ЗначениеСсылки);
		
		Запрос = Соединение.NewObject("Запрос");
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1 ПРЕДСТАВЛЕНИЕ(УНИКАЛЬНЫЙИДЕНТИФИКАТОР(Ссылка)) УИ ИЗ " + ОбъектМД.ПолноеИмя();
		РезультатЗапроса = Запрос.Выполнить();
		Если Не РезультатЗапроса.Пустой() Тогда 
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			
			ТекущийНомерШага = ТекущийНомерШага + 1;
			НоваяСтрока = Строки_Класс_Объект.Добавить();
			НоваяСтрока.Автоописание = ОбъектМД.ПолноеИмя() + ".ФормаЭлемента.Ссылка";
			НоваяСтрока.Наименование = ОбъектМД.Представление() + " (Форма элемента, ссылка)";
			НоваяСтрока.Активность = 1;
			НоваяСтрока.ДанныеКартинки = НомераКартинок.НавигационнаяСсылка;
			НоваяСтрока.ТипШага = "ВыполнитьИнтерактивнуюКоманду";
			НоваяСтрока.УИШ	= Новый УникальныйИдентификатор;
			НоваяСтрока.Цвет = "0";
			НоваяСтрока.НомерШага = ТекущийНомерШага;
			ЗначениеСсылки.НавигационнаяСсылка = "e1cib/data/" + ОбъектМД.ПолноеИмя() + "?ref=" + ПолучитьGUID(Выборка.УИ);
			НоваяСтрока.Значение = ПоместитьВХранилище(ЗначениеСсылки);
			
		КонецЕсли;
		
		Если ЭтоПолноправныйПользователь Или Соединение.ПравоДоступа("ИнтерактивноеДобавление", ОбъектМД, ПользовательИБ) Тогда 
			ТекущийНомерШага = ТекущийНомерШага + 1;
			НоваяСтрока = Строки_Класс_Объект.Добавить();
			НоваяСтрока.Автоописание = ОбъектМД.ПолноеИмя() + ".ФормаЭлемента.Новый";
			НоваяСтрока.Наименование = ОбъектМД.Представление() + " (Форма элемента, новый)";
			НоваяСтрока.Активность = 1;
			НоваяСтрока.ДанныеКартинки = НомераКартинок.НавигационнаяСсылка;
			НоваяСтрока.ТипШага = "ВыполнитьИнтерактивнуюКоманду";
			НоваяСтрока.УИШ	= Новый УникальныйИдентификатор;
			НоваяСтрока.Цвет = "0";
			НоваяСтрока.НомерШага = ТекущийНомерШага;
			ЗначениеСсылки.НавигационнаяСсылка = "e1cib/data/" + ОбъектМД.ПолноеИмя();
			НоваяСтрока.Значение = ПоместитьВХранилище(ЗначениеСсылки);
		КонецЕсли;
		
		Количество = Количество + 1;
		Если Количество = 20 Тогда 
			Количество = 0;
			Заполнить_ДобавитьСтроку_ЗакрытьВсеФормы(Строки_Класс, НомераКартинок.Выполнить);
		КонецЕсли;
		
	КонецЦикла;
	Если Не Строки_Класс = Неопределено Тогда 
		Заполнить_ДобавитьСтроку_ЗакрытьВсеФормы(Строки_Класс, НомераКартинок.Выполнить);
	КонецЕсли;
	#КонецОбласти
	
	#Область Документы
	Строки_Класс = Неопределено;
	Для Каждого ОбъектМД Из Соединение.Метаданные.Документы Цикл 
		
		Если Не (ЭтоПолноправныйПользователь Или Соединение.ПравоДоступа("Просмотр", ОбъектМД, ПользовательИБ)) Тогда 
			Продолжить;
		КонецЕсли;
		
		Если Строки_Класс = Неопределено Тогда 
			ТекущийНомерШага = ТекущийНомерШага + 1;
			НоваяСтрока = Строки.Добавить();
			НоваяСтрока.Наименование = "Документы";
			НоваяСтрока.Активность = 1;
			НоваяСтрока.ДанныеКартинки = НомераКартинок.Группа;
			НоваяСтрока.ТипШага = "Группа";
			НоваяСтрока.УИШ = Новый УникальныйИдентификатор;
			НоваяСтрока.Цвет = "0";
			НоваяСтрока.НомерШага = ТекущийНомерШага;
			НоваяСтрока.Значение = ЗначениеГруппы;
			Строки_Класс = НоваяСтрока.ПолучитьЭлементы();
		КонецЕсли;
		
		ТекущийНомерШага = ТекущийНомерШага + 1;
		НоваяСтрока = Строки_Класс.Добавить();
		НоваяСтрока.Автоописание = ОбъектМД.ПолноеИмя();
		НоваяСтрока.Наименование = ОбъектМД.Представление();
		НоваяСтрока.Активность = 1;
		НоваяСтрока.ДанныеКартинки = НомераКартинок.Группа;
		НоваяСтрока.ТипШага = "Группа";
		НоваяСтрока.УИШ = Новый УникальныйИдентификатор;
		НоваяСтрока.Цвет = "0";
		НоваяСтрока.НомерШага = ТекущийНомерШага;
		НоваяСтрока.Значение = ЗначениеГруппы;
		Строки_Класс_Объект = НоваяСтрока.ПолучитьЭлементы();
		
		ТекущийНомерШага = ТекущийНомерШага + 1;
		НоваяСтрока = Строки_Класс_Объект.Добавить();
		НоваяСтрока.Автоописание = ОбъектМД.ПолноеИмя() + ".ФормаСписка";
		НоваяСтрока.Наименование = ОбъектМД.Представление() + " (Форма списка)";
		НоваяСтрока.Активность = 1;
		НоваяСтрока.ДанныеКартинки = НомераКартинок.НавигационнаяСсылка;
		НоваяСтрока.ТипШага = "ВыполнитьИнтерактивнуюКоманду";
		НоваяСтрока.УИШ	= Новый УникальныйИдентификатор;
		НоваяСтрока.Цвет = "0";
		НоваяСтрока.НомерШага = ТекущийНомерШага;
		ЗначениеСсылки.НавигационнаяСсылка = "e1cib/list/" + ОбъектМД.ПолноеИмя();
		НоваяСтрока.Значение = ПоместитьВХранилище(ЗначениеСсылки);
		
		Запрос = Соединение.NewObject("Запрос");
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1 ПРЕДСТАВЛЕНИЕ(УНИКАЛЬНЫЙИДЕНТИФИКАТОР(Ссылка)) УИ ИЗ " + ОбъектМД.ПолноеИмя();
		РезультатЗапроса = Запрос.Выполнить();
		Если Не РезультатЗапроса.Пустой() Тогда 
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			
			ТекущийНомерШага = ТекущийНомерШага + 1;
			НоваяСтрока = Строки_Класс_Объект.Добавить();
			НоваяСтрока.Автоописание = ОбъектМД.ПолноеИмя() + ".ФормаОбъекта.Ссылка";
			НоваяСтрока.Наименование = ОбъектМД.Представление() + " (Форма объекта, ссылка)";
			НоваяСтрока.Активность = 1;
			НоваяСтрока.ДанныеКартинки = НомераКартинок.НавигационнаяСсылка;
			НоваяСтрока.ТипШага = "ВыполнитьИнтерактивнуюКоманду";
			НоваяСтрока.УИШ	= Новый УникальныйИдентификатор;
			НоваяСтрока.Цвет = "0";
			НоваяСтрока.НомерШага = ТекущийНомерШага;
			ЗначениеСсылки.НавигационнаяСсылка = "e1cib/data/" + ОбъектМД.ПолноеИмя() + "?ref=" + ПолучитьGUID(Выборка.УИ);
			НоваяСтрока.Значение = ПоместитьВХранилище(ЗначениеСсылки);
			
		КонецЕсли;
		
		Если ЭтоПолноправныйПользователь Или Соединение.ПравоДоступа("ИнтерактивноеДобавление", ОбъектМД, ПользовательИБ) Тогда 
			ТекущийНомерШага = ТекущийНомерШага + 1;
			НоваяСтрока = Строки_Класс_Объект.Добавить();
			НоваяСтрока.Автоописание = ОбъектМД.ПолноеИмя() + ".ФормаОбъекта.Новый";
			НоваяСтрока.Наименование = ОбъектМД.Представление() + " (Форма объекта, новый)";
			НоваяСтрока.Активность = 1;
			НоваяСтрока.ДанныеКартинки = НомераКартинок.НавигационнаяСсылка;
			НоваяСтрока.ТипШага = "ВыполнитьИнтерактивнуюКоманду";
			НоваяСтрока.УИШ	= Новый УникальныйИдентификатор;
			НоваяСтрока.Цвет = "0";
			НоваяСтрока.НомерШага = ТекущийНомерШага;
			ЗначениеСсылки.НавигационнаяСсылка = "e1cib/data/" + ОбъектМД.ПолноеИмя();
			НоваяСтрока.Значение = ПоместитьВХранилище(ЗначениеСсылки);
		КонецЕсли;
		
		Количество = Количество + 1;
		Если Количество = 20 Тогда 
			Количество = 0;
			Заполнить_ДобавитьСтроку_ЗакрытьВсеФормы(Строки_Класс, НомераКартинок.Выполнить);
		КонецЕсли;
		
	КонецЦикла;
	Если Не Строки_Класс = Неопределено Тогда 
		Заполнить_ДобавитьСтроку_ЗакрытьВсеФормы(Строки_Класс, НомераКартинок.Выполнить);
	КонецЕсли;
	#КонецОбласти
	
	#Область ЖурналыДокументов
	Строки_Класс = Неопределено;
	Для Каждого ОбъектМД Из Соединение.Метаданные.ЖурналыДокументов Цикл
		
		Если Не (ЭтоПолноправныйПользователь Или Соединение.ПравоДоступа("Просмотр", ОбъектМД, ПользовательИБ)) Тогда 
			Продолжить;
		КонецЕсли;
		
		Если Строки_Класс = Неопределено Тогда 
			ТекущийНомерШага = ТекущийНомерШага + 1;
			НоваяСтрока = Строки.Добавить();
			НоваяСтрока.Наименование = "Журналы документов";
			НоваяСтрока.Активность = 1;
			НоваяСтрока.ДанныеКартинки = НомераКартинок.Группа;
			НоваяСтрока.ТипШага = "Группа";
			НоваяСтрока.УИШ = Новый УникальныйИдентификатор;
			НоваяСтрока.Цвет = "0";
			НоваяСтрока.НомерШага = ТекущийНомерШага;
			НоваяСтрока.Значение = ЗначениеГруппы;
			Строки_Класс = НоваяСтрока.ПолучитьЭлементы();
		КонецЕсли;
		
		ТекущийНомерШага = ТекущийНомерШага + 1;
		НоваяСтрока = Строки_Класс.Добавить();
		НоваяСтрока.Автоописание = ОбъектМД.ПолноеИмя();
		НоваяСтрока.Наименование = ОбъектМД.Представление();
		НоваяСтрока.Активность = 1;
		НоваяСтрока.ДанныеКартинки = НомераКартинок.НавигационнаяСсылка;
		НоваяСтрока.ТипШага = "ВыполнитьИнтерактивнуюКоманду";
		НоваяСтрока.УИШ	= Новый УникальныйИдентификатор;
		НоваяСтрока.Цвет = "0";
		НоваяСтрока.НомерШага = ТекущийНомерШага;
		ЗначениеСсылки.НавигационнаяСсылка = "e1cib/list/" + ОбъектМД.ПолноеИмя();
		НоваяСтрока.Значение = ПоместитьВХранилище(ЗначениеСсылки);
		
		Количество = Количество + 1;
		Если Количество = 20 Тогда 
			Количество = 0;
			Заполнить_ДобавитьСтроку_ЗакрытьВсеФормы(Строки_Класс, НомераКартинок.Выполнить);
		КонецЕсли;
		
	КонецЦикла;
	Если Не Строки_Класс = Неопределено Тогда 
		Заполнить_ДобавитьСтроку_ЗакрытьВсеФормы(Строки_Класс, НомераКартинок.Выполнить);
	КонецЕсли;
	#КонецОбласти
	
	Соединение = Неопределено;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура Заполнить_ДобавитьСтроку_ЗакрытьВсеФормы(Строки, ДанныеКартинки)
	
	Код = "Для Каждого Элемент Из ПеремТестируемоеПриложение.ПолучитьПодчиненныеОбъекты() Цикл 
	|	Если Элемент.НачальнаяСтраница Тогда 
	|		Элемент.Активизировать();
	|	ИначеЕсли Не (Элемент.НачальнаяСтраница Или Элемент.Основное) Тогда 
	|		Элемент.Закрыть();
	|	КонецЕсли;
	|КонецЦикла;";
	НоваяСтрока = Строки.Добавить();
	НоваяСтрока.Автоописание = СтрШаблон("Выполнить процедуру на клиенте:
	|{ %1 } ", Код);
	НоваяСтрока.Активность = 1;
	НоваяСтрока.ДанныеКартинки = ДанныеКартинки;
	НоваяСтрока.Наименование = НСтр("ru = 'Закроем все окна и деактивация панели'", "ru");
	НоваяСтрока.ТипШага = "ВыполнитьКлиентскуюПроцедуру";
	НоваяСтрока.УИШ = Новый УникальныйИдентификатор;
	НоваяСтрока.Цвет = "0";
	НоваяСтрока.Значение = ПоместитьВХранилище(Новый Структура("ДействиеПриОшибке,НаСервере,НаименованиеИзмененоВручную,ТекстПроцедуры,ИмяПеременнойРезультата", "Остановить", Ложь, Истина, Код, ""));
	
КонецПроцедуры

Функция ПолучитьGUID(УИ) Экспорт
	
	ГУИД = СтрЗаменить(УИ, "-", "");
	Возврат Сред(ГУИД, 17, 16) + Сред(ГУИД, 13, 4) + Сред(ГУИД, 9, 4) + Сред(ГУИД, 1, 4) + Сред(ГУИД, 5, 4);
	
КонецФункции

&НаКлиенте
&ИзменениеИКонтроль("ВыполнитьЗапускТестируемогоКлиента")
Процедура PA_ВыполнитьЗапускТестируемогоКлиента()

	#Если ТонкийКлиент Тогда

		Если ВидТестируемогоКлиента < 2 Тогда
			// Это толстый Или тонкий клиент

			КомандаЗапуска = "ENTERPRISE";

			СтрокаСоединения = СцТ_ОпределитьЗначение_НаКлиенте(СтрокаПодключенияКИБ);
			Если ПустаяСтрока(СтрокаСоединения) Тогда
				СтрокаСоединения = СтрокаСоединенияИнформационнойБазы();
			КонецЕсли;

			СтрокаСоединения = """" + СтрЗаменить(СтрокаСоединения, """", """""") + """";

			КомандаЗапуска = КомандаЗапуска
			+ " /IBConnectionString"
			+ СтрокаСоединения
			#Удаление
			+ " /TESTCLIENT -TPort"
			+ Формат(ПортТестируемогоКлиента, "ЧГ=0");
			#КонецУдаления
			#Вставка
			;	
			#КонецВставки

			Если НЕ ПустаяСтрока(Объект.ИмяПользователя) Тогда

				КомандаЗапуска = КомандаЗапуска
				+ " /N """ + СтрЗаменить(Объект.ИмяПользователя, """", """""") + """";

				Если НЕ ПустаяСтрока(Объект.ПарольПользователяИБ) Тогда
					КомандаЗапуска = КомандаЗапуска
					+ " /P """ + СтрЗаменить(Объект.ПарольПользователяИБ, """", """""") + """";
				КонецЕсли;

			КонецЕсли;

			Если НЕ ПустаяСтрока(ДопПараметрыКоманднойСтроки) Тогда
				КомандаЗапуска = КомандаЗапуска + " " + ДопПараметрыКоманднойСтроки;
			КонецЕсли;

			Если ЗапускСОбработкойТестированияСервера Тогда
				АдресОбработки = АдресВременногоХранилищаОбработки();
				ИмяФАйлаОбработки = ПолучитьИмяВременногоФайла("epf");
				ДДОбработки = ПолучитьИзВременногоХранилища(АдресОбработки);
				Попытка
					ДДОбработки.Записать(ИмяФАйлаОбработки);
				Исключение
				КонецПопытки;

				КомандаЗапуска = КомандаЗапуска
				+ " /Execute ""&def_exec""";
				КомандаЗапуска = СтрЗаменить(КомандаЗапуска, "&def_exec", ИмяФАйлаОбработки);
			КонецЕсли;

			ПутьКИсполняемомуФайлу = КаталогПрограммы() + ?(ВидТестируемогоКлиента = 0, "1cv8c", "1cv8");

			КомандаЗапуска = """" + 
			ПутьКИсполняемомуФайлу
			+ """ "
			+ КомандаЗапуска;
			#Вставка
				КомандаЗапуска = КомандаЗапуска + " /TESTCLIENT -TPort"
				+ Формат(ПортТестируемогоКлиента, "ЧГ=0");
			#КонецВставки

			ОписаниеОповещения = Новый ОписаниеОповещения(
			"ПослеУдачногоЗапускаТестируемогоКлиента",
			ЭтотОбъект,,
			"ПослеНеудачногоЗапускаТестируемогоКлиента",
			ЭтотОбъект);
			НачатьЗапускПриложения(ОписаниеОповещения, КомандаЗапуска);

		Иначе

			СтрокаЗапуска = URLИБ;
			Если НЕ ПустаяСтрока(Объект.ИмяПользователя) Тогда

				СцТ_ДобавитьПараметрКURL(СтрокаЗапуска, "N", Объект.ИмяПользователя);

				Если НЕ ПустаяСтрока(Объект.ПарольПользователяИБ) Тогда
					СцТ_ДобавитьПараметрКURL(СтрокаЗапуска, "P", Объект.ПарольПользователяИБ);
				КонецЕсли;

			КонецЕсли;

			СцТ_ДобавитьПараметрКURL(СтрокаЗапуска, "TESTCLIENT");
			СцТ_ДобавитьПараметрКURL(СтрокаЗапуска, "TESTCLIENTID", ИдентификаторВебКлиента);


			Если ПустаяСтрока(ПутьКИсполняемомуФайлуОбозревателя) Тогда
				// используется браузер по умолчанию
				КомандаЗапуска = СтрокаЗапуска;
			Иначе
				КомандаЗапуска = ПутьКИсполняемомуФайлуОбозревателя + " " + СтрокаЗапуска;
			КонецЕсли;

			ОписаниеОповещения = Новый ОписаниеОповещения(
			"ПослеУдачногоЗапускаТестируемогоКлиента",
			ЭтотОбъект,,
			"ПослеНеудачногоЗапускаТестируемогоКлиента",
			ЭтотОбъект);

			НачатьЗапускПриложения(ОписаниеОповещения, КомандаЗапуска);

		КонецЕсли;
	#КонецЕсли

КонецПроцедуры

#КонецОбласти